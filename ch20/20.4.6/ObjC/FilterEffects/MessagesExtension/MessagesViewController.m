//
//  MessagesViewController.m
//  MessagesExtension
//
//  Created by 关东升 on 2016-11-18.
//  本书网站：http://www.51work6.com
//  智捷课堂在线课堂：http://www.zhijieketang.com/
//  智捷课堂微信公共号：zhijieketang
//  作者微博：@tony_关东升
//  作者微信：tony关东升
//  QQ：569418560 邮箱：eorient@sina.com
//  QQ交流群：162030268
//


#import "MessagesViewController.h"


@interface MessagesViewController ()

@property (weak, nonatomic) IBOutlet UILabel *label;
@property (weak, nonatomic) IBOutlet UIStepper *stepper;

@end

@implementation MessagesViewController

- (IBAction)onValueChanged:(id)sender {
    NSString* strValue = [NSString stringWithFormat:@"%.1f", self.stepper.value];
    self.label.text = strValue;
}

- (IBAction)onclick:(id)sender {
    
    UIImage *image = [self filterGaussianBlur:self.stepper.value];
    
    MSMessageTemplateLayout* layout = [[MSMessageTemplateLayout alloc] init];
    layout.image = image;
    layout.caption = @"高斯模糊";
    layout.subcaption = [NSString stringWithFormat:@"Radius=%.1f", self.stepper.value];
    
    MSMessage* message = [[MSMessage alloc] init];
    message.layout = layout;
    
    MSConversation* conversation = self.activeConversation;
    [conversation insertMessage:message completionHandler:^(NSError* _Nullable error) {
        if (error != nil) {
            NSLog(@"%@", error);
        }
    }];
    
}

- (UIImage*)filterGaussianBlur: (double)value {
    
    UIImage *image = [UIImage imageNamed:@"SkyDrive340.png"];

    CIFilter *gaussianBlur = [CIFilter filterWithName: @"CIGaussianBlur"];
    CIImage *cImage = [CIImage imageWithCGImage:[image CGImage]];
    
    [gaussianBlur setValue: cImage forKey: @"inputImage"];
    [gaussianBlur setValue: [NSNumber numberWithDouble:value] forKey: @"inputRadius"];
    CIImage *result = [gaussianBlur valueForKey:@"outputImage"];
    
    CIContext *context = [CIContext contextWithOptions:nil];
    CGImageRef imageRef = [context createCGImage:result
                                        fromRect:CGRectMake(0, 0, image.size.width, image.size.height)];
    
    UIImage *outputImage = [[UIImage alloc] initWithCGImage:imageRef];
    return outputImage;
}


- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Conversation Handling

-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
}

-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
}

@end
